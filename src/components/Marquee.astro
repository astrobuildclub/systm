---
interface Props {
  title?: string;
  rotation?: number;
  isInteractive?: boolean;
  duration?: number;
  direction?: "ltr" | "rtl";
}
const {
  direction = "rtl",
  rotation = 0,
  title = "one",
  duration = 30,
  isInteractive = true,
} = Astro.props;
const marqueeRotation = `${rotation}deg`;
---

<section
  class=`marquee marquee-${title}`
  data-direction={direction}
  data-rotation={marqueeRotation}
  data-duration={duration}
>
  <div class="marquee-wrapper">
    <div class="marquee-items">
      <slot />
    </div>
  </div>
</section>

<script src="../lib/marquee.js"></script>

<style define:vars={{ marqueeRotation }}>
  :root {
    --duration: 40s;
  }
  .marquee {
    transform: rotate(var(--marqueeRotation));
  }
  .marquee-wrapper {
    z-index: -999;
    position: relative;
    width: 100%;
    overflow: hidden;
  }

  .marquee-items {
    display: inline-block;
    -webkit-animation-duration: var(--duration);
    animation-duration: var(--duration);
    -webkit-animation-timing-function: linear;
    animation-timing-function: linear;
    -webkit-animation-iteration-count: infinite;
    animation-iteration-count: infinite;
    -webkit-animation-name: marquee;
    animation-name: marquee;
    box-sizing: content-box;
    line-height: 1;
    white-space: nowrap;
  }

  /* marquee */

  /*
  .marquee {
    display: inline-block;
    box-sizing: content-box;
    width: 100%;
    height: auto;
    overflow: hidden;
  }
  .marquee-items {
    display: inline-block;
    -webkit-animation-duration: var(--duration);
    animation-duration: var(--duration);
    -webkit-animation-timing-function: linear;
    animation-timing-function: linear;
    -webkit-animation-iteration-count: infinite;
    animation-iteration-count: infinite;
    -webkit-animation-name: marquee;
    animation-name: marquee;
    box-sizing: content-box;
    line-height: 1;
    white-space: nowrap;
  }

  @keyframes marquee {
    0% {
      transform: translate(0);
    }
    100% {
      transform: translate(-50%);
    }
  }*/
</style>
